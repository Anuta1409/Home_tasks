Преобразование типов данных 

1. Преобразование (приведение) типов - это процесс, при котором меняется тип выражения или переменных в выражении, 
может производиться автоматически либо указываться явно (тип данных указывается в круглых скобках перед литералом, 
переменной в выражении или перед выражением, но в таком случае выражение берется в круглые скобки).
Преобразование типов отграничено для для некоторых типов данных или невозможно вообще.
Преобразование бывает:
1) явное (double) 5
2) неявное - бывает 2-х типов:
	- расширяющее преобразование (widening conversion): byte->short->int->long->float->double.
!Для расширяющих преобразований числовые типы, включая целый и с плавающей точкой, являются совместимыми друг с другом. 
!Однако числовые типы не совместимы с типами char и boolean!!!!
!Типы char и boolean не совместимы также и друг с другом!!!
	- сужающее преобразование  (narrowing conversion),  byte<-short<-char<-int<-long<-float<-double, 
! Такое преобразование может привести к потере точности числа или к его искажению.
! При сужающих преобразованиях при компиляции программы выводится диагностическое сообщение о несовместимости типов 
и файлы классов не создаются. Такое сообщение будет выдано и при попытке преобразование выражений типа byte или short в 
переменную типа char.

(cast) - операция приведения типов которая имеет следующий формат: (тип-преобразования) значение.Пример:
byte x = 71;
char symbol = (char) x;
переменная symbol получит значение 'G'.

Если значение с плавающей точкой присваивается целому типу, то (если значение с плавающей точкой имеет дробную часть)
при явном преобразовании типа происходит также усечение (truncation) числа.

Если же присваиваемое значение лежит вне диапазона типа-преобразования, то результатом преобразования будет остаток от
деления значения на модуль диапазона присваиваемого типа (для чисел типа byte модуль диапазона будет равен 256, для short 
– 65536, для int – 4294967296 и для long – 18446744073709551616). Например, в результате выполнения оператора
byte x = (byte) 514; переменная x получит значение 2.

!!!При выполнении арифметических и побитовых преобразований все значения byte и short, а также char расширяются до int!!!
!!!Если хотя бы один операнд имеет тип long, тип целого выражения расширяется до long. 
!!!Если один из операндов имеет тип float, то тип полного выражения расширяется до float.
!!!Если один из операндов имеет тип double, то тип результата будет double.

Обратить внимание!!!!!!!!!!!
Автоматические расширения типов (особенно расширения short и byte до int) могут вызывать плохо распознаваемые ошибки во 
время компиляции. Например, в операторах:
byte x = 30, y = 5;
x = x + y;
перед выполнением сложения значение переменных x и y будет расширено до int, а затем при выполнении попытки присвоения 
результата вычисления типа int переменной типа byte будет выдано сообщение об ошибке.
Чтобы этого избежать надо использовать во втором операторе явное преобразование типов:
x = (byte) (x + y);
Выражение x + y необходимо заключить в скобки потому, что приоритет операции приведения типа, заключенной в скобки, выше, 
чем приоритет операции сложения. Кстати, если записать второй оператор в виде:
x += y;// сообщения об ошибке не будет.
